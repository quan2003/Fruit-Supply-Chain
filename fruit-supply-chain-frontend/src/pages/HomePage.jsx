import React from "react";
import {
  Container,
  Typography,
  Box,
  Grid,
  Button,
  IconButton,
} from "@mui/material";
import { motion } from "framer-motion";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import "../assets/styles/Carousel.css";
import Layout from "../components/common/Layout";
import Footer from "../components/common/Footer";
import ArrowBackIosNewIcon from "@mui/icons-material/ArrowBackIosNew";
import ArrowForwardIosIcon from "@mui/icons-material/ArrowForwardIos";

// Custom arrow component for carousel
const CustomArrow = ({ direction, onClick }) => {
  return (
    <IconButton
      onClick={onClick}
      sx={{
        position: "absolute",
        top: "50%",
        transform: "translateY(-50%)",
        zIndex: 2,
        backgroundColor: "rgba(255, 255, 255, 0.7)",
        boxShadow: "0px 2px 8px rgba(0, 0, 0, 0.15)",
        width: 40,
        height: 40,
        "&:hover": {
          backgroundColor: "rgba(255, 255, 255, 0.9)",
        },
        ...(direction === "prev" ? { left: 16 } : { right: 16 }),
      }}
    >
      {direction === "prev" ? <ArrowBackIosNewIcon /> : <ArrowForwardIosIcon />}
    </IconButton>
  );
};

// Centralized image repository with consistent dimensions
const images = {
  farmer:
    "https://i.ex-cdn.com/nongnghiep.vn/files/news_old/2019/12/18/thu-hoach-5-1jpg-100609.jpg",
  supplyChain:
    "https://antinlogistics.com/wp-content/uploads/2023/07/logistics-va-quan-ly-chuoi-cung-ung-1.png",
  consumer:
    "https://images.unsplash.com/photo-1610832958506-aa56368176cf?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80",
  transporter:
    "https://images.unsplash.com/photo-1586528116311-ad8dd3c8310d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80",
  distributionCenter:
    "https://images.unsplash.com/photo-1553413077-190dd305871c?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
  warehouse:
    "https://images.unsplash.com/photo-1586528116311-ad8dd3c8310d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80",
};

const HomePage = () => {
  // Carousel settings with fixed configuration
  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 3000,
    arrows: true,
    fade: true,
    cssEase: "linear",
    prevArrow: <CustomArrow direction="prev" />,
    nextArrow: <CustomArrow direction="next" />,
  };

  // Standardized carousel slides with consistent structure
  const slides = [
    {
      target: "Ng∆∞·ªùi ti√™u d√πng",
      role: "Customer",
      title: "N√¥ng s·∫£n x·ªãn, ch·∫•t l∆∞·ª£ng ƒë·ªânh cao!",
      description:
        "Tr√°i c√¢y t∆∞∆°i ngon, ngu·ªìn g·ªëc r√µ r√†ng, t·ª´ v∆∞·ªùn ƒë·∫øn tay b·∫°n! ƒê·∫£m b·∫£o s·∫°ch 100%, kh√¥ng ngon ho√†n ti·ªÅn li·ªÅn tay!",
      cta: "KH√ÅM PH√Å NGAY! üöÄ",
      image: images.consumer,
      link: "/truy-xuat",
      emoji: "üçé",
      layout: "left",
    },
    {
      target: "Ng∆∞·ªùi d√¢n",
      role: "Producer",
      title: "N√¥ng d√¢n ∆°i, s·∫£n xu·∫•t ƒë·ªânh cao nha!",
      description:
        "Theo d√µi v√πng tr·ªìng, nh·∫≠n g·ª£i √Ω si√™u x·ªãn ƒë·ªÉ tr√°i c√¢y ngon h∆°n, nƒÉng su·∫•t cao h∆°n! ƒê·∫£m b·∫£o s·∫°ch 100%, ai c≈©ng m√™!",
      cta: "THEO D√ïI NGAY! üöú",
      image: images.farmer,
      link: "/farms",
      emoji: "üå±",
      layout: "left",
    },
    {
      target: "Nh√† qu·∫£n l√Ω",
      role: "Admin",
      title: "Qu·∫£n l√Ω chu·ªói cung ·ª©ng d·ªÖ ·∫πc!",
      description:
        "D·ªØ li·ªáu minh b·∫°ch, qu·∫£n l√Ω t·ª´ A-Z, ƒë∆∞a ra quy·∫øt ƒë·ªãnh chu·∫©n kh√¥ng c·∫ßn ch·ªânh! T·∫•t c·∫£ trong t·∫ßm tay b·∫°n!",
      cta: "QU·∫¢N L√ù NGAY! üîß",
      image: images.supplyChain,
      link: "/quan-ly",
      emoji: "üìä",
      layout: "left",
    },
    {
      target: "Trung t√¢m ph√¢n ph·ªëi",
      role: "Distributor",
      title: "Ph√¢n ph·ªëi hi·ªáu qu·∫£, kh√¥ng lo t·ªìn kho!",
      description:
        "Qu·∫£n l√Ω h√†ng h√≥a th√¥ng minh, ph√¢n ph·ªëi ƒë√∫ng n∆°i, ƒë√∫ng l√∫c, gi·∫£m thi·ªÉu l√£ng ph√≠ v√† t·ªëi ∆∞u l·ª£i nhu·∫≠n!",
      cta: "B·∫ÆT ƒê·∫¶U NGAY! üõ†Ô∏è",
      image: images.distributionCenter,
      link: "/phan-phoi",
      emoji: "üè¨",
      layout: "left",
    },
    {
      target: "Nh√† v·∫≠n chuy·ªÉn",
      role: "Transporter",
      title: "V·∫≠n chuy·ªÉn nhanh, chu·∫©n, an to√†n!",
      description:
        "Theo d√µi l·ªô tr√¨nh, t·ªëi ∆∞u h√≥a th·ªùi gian giao h√†ng, ƒë·∫£m b·∫£o n√¥ng s·∫£n lu√¥n t∆∞∆°i ngon khi ƒë·∫øn tay kh√°ch h√†ng!",
      cta: "THAM GIA NGAY! üì¶",
      image: images.warehouse,
      link: "/van-chuyen",
      emoji: "üöö",
      layout: "left",
    },
  ];

  // Standardized feature cards with consistent structure
  const featureCards = [
    {
      title: "L·ªùi khuy√™n tr·ªìng tr·ªçt th√¥ng minh",
      description:
        "H·ªá th·ªëng t·ª± ƒë·ªông ph√¢n t√≠ch d·ªØ li·ªáu v√πng tr·ªìng v√† ƒë∆∞a ra g·ª£i √Ω t·ªëi ∆∞u: t·ª´ c√°ch t∆∞·ªõi n∆∞·ªõc, b√≥n ph√¢n ƒë·∫øn th·ªùi ƒëi·ªÉm thu ho·∫°ch, gi√∫p c√¢y tr·ªìng ƒë·∫°t ch·∫•t l∆∞·ª£ng cao nh·∫•t! üåø",
      image:
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTeru4SbyCW8Hdb6fgxANlZySCnKEmzuaB2hA&s",
    },
    {
      title: "Ki·ªÉm tra ch·∫•t l∆∞·ª£ng t·ª± ƒë·ªông",
      description:
        "N√¥ng s·∫£n ƒë∆∞·ª£c h·ªá th·ªëng ki·ªÉm tra k·ªπ l∆∞·ª°ng qua h√¨nh ·∫£nh v√† d·ªØ li·ªáu. N·∫øu ch∆∞a ch√≠n ho·∫∑c kh√¥ng ƒë·∫°t ti√™u chu·∫©n, h·ªá th·ªëng s·∫Ω t·ª´ ch·ªëi ƒëƒÉng b√°n ƒë·ªÉ ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng! üçé",
      image:
        "https://soyte.hatinh.gov.vn/upload/1000030/20171026/12da6a063c0f8bbf872b1ce8dac3970f1_4-trai-cay4-1437268105198.jpg",
    },
    {
      title: "H∆∞·ªõng d·∫´n b·∫£o qu·∫£n chuy√™n nghi·ªáp",
      description:
        "H·ªá th·ªëng cung c·∫•p h∆∞·ªõng d·∫´n b·∫£o qu·∫£n chi ti·∫øt, t·ª´ nhi·ªát ƒë·ªô, ƒë·ªô ·∫©m ƒë·∫øn c√°ch ƒë√≥ng g√≥i, gi√∫p n√¥ng s·∫£n gi·ªØ ƒë∆∞·ª£c ƒë·ªô t∆∞∆°i ngon l√¢u nh·∫•t! ü•¶",
      image: "https://cdn.tgdd.vn/2021/03/CookProduct/4-1200x676-2.jpg",
    },
  ];

  // Standardized testimonials with consistent structure
  const testimonials = [
    {
      quote:
        "Nh·ªù h·ªá th·ªëng, t√¥i bi·∫øt ch√≠nh x√°c th·ªùi ƒëi·ªÉm thu ho·∫°ch v√† c√°ch b·∫£o qu·∫£n. Tr√°i c√¢y c·ªßa t√¥i gi·ªù ƒë∆∞·ª£c kh√°ch h√†ng khen h·∫øt l·ªùi!",
      author: "Ch·ªã Lan",
      role: "N√¥ng d√¢n",
    },
    {
      quote:
        "T√¥i y√™n t√¢m mua n√¥ng s·∫£n v√¨ bi·∫øt r√µ ngu·ªìn g·ªëc v√† ch·∫•t l∆∞·ª£ng. H·ªá th·ªëng ki·ªÉm tra r·∫•t ƒë√°ng tin c·∫≠y!",
      author: "Anh H√πng",
      role: "Ng∆∞·ªùi ti√™u d√πng",
    },
    {
      quote:
        "H·ªá th·ªëng gi√∫p t√¥i qu·∫£n l√Ω n√¥ng s·∫£n d·ªÖ d√†ng, t·ª´ ki·ªÉm tra ch·∫•t l∆∞·ª£ng ƒë·∫øn ph√¢n ph·ªëi, m·ªçi th·ª© ƒë·ªÅu minh b·∫°ch!",
      author: "Ch·ªã Mai",
      role: "Nh√† qu·∫£n l√Ω",
    },
  ];

  // Common styling constants for consistency
  const styles = {
    section: {
      py: 6,
    },
    sectionTitle: {
      fontWeight: "bold",
      color: "#333",
      textAlign: "center",
      mb: 4,
      fontFamily: "'Roboto', sans-serif",
    },
    card: {
      textAlign: "center",
      bgcolor: "white",
      borderRadius: 4,
      p: 4,
      boxShadow: "0 4px 15px rgba(0, 0, 0, 0.1)",
      transition: "transform 0.3s ease",
      "&:hover": {
        transform: "translateY(-5px)",
        boxShadow: "0 6px 20px rgba(0, 0, 0, 0.15)",
      },
    },
    cardTitle: {
      fontWeight: "bold",
      mb: 2,
      color: "#42A5F5",
      fontFamily: "'Roboto', sans-serif",
    },
    cardImage: {
      width: "100%",
      height: 180,
      objectFit: "cover",
      borderRadius: 3,
      mb: 3,
    },
    button: {
      bgcolor: "#42A5F5",
      color: "white",
      borderRadius: "50px",
      px: 5,
      py: 1.5,
      fontWeight: "bold",
      fontFamily: "'Roboto', sans-serif",
      fontSize: "1rem",
      "&:hover": {
        bgcolor: "#1E88E5",
        transform: "translateY(-3px)",
        boxShadow: "0 4px 12px rgba(66, 165, 245, 0.5)",
      },
      transition: "all 0.3s ease",
    },
    ctaButton: {
      backgroundColor: "#42A5F5",
      color: "white",
      borderRadius: "50px",
      px: 4,
      py: 1.2,
      fontWeight: "bold",
      fontSize: "1rem",
      letterSpacing: "0.5px",
      boxShadow: "0 4px 10px rgba(0, 105, 217, 0.3)",
      transition: "all 0.3s ease",
      "&:hover": {
        backgroundColor: "#1976D2",
        transform: "translateY(-3px)",
        boxShadow: "0 6px 15px rgba(0, 105, 217, 0.4)",
      },
    },
    // Carousel specific styles
    carouselSection: {
      background: "linear-gradient(135deg, #E6F4EA 0%, #CCEAE3 100%)",
      py: 0,
      my: 0,
      overflow: "hidden",
    },
    carouselSlide: {
      height: "550px",
      position: "relative",
    },
    slideContent: {
      maxWidth: "1200px",
      mx: "auto",
      height: "100%",
      position: "relative",
      px: { xs: 2, md: 3, lg: 4 },
    },
    slideTitle: {
      fontWeight: "900",
      fontSize: { xs: "2.5rem", md: "3.5rem" },
      lineHeight: 1.1,
      color: "#4993E5",
      fontFamily: "'Roboto', sans-serif",
      mb: 2,
    },
    slideDescription: {
      fontSize: "1.2rem",
      color: "#555",
      lineHeight: 1.6,
      fontFamily: "'Roboto', sans-serif",
      mb: 3,
      maxWidth: { xs: "100%", md: "80%" },
    },
    slideImage: {
      width: "100%",
      height: "auto",
      maxHeight: "350px",
      objectFit: "contain",
      borderRadius: "16px",
      display: "block",
    },
    // Layout-specific styles
    leftLayout: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      height: "100%",
      flexDirection: { xs: "column", md: "row" },
    },
    rightLayout: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      height: "100%",
      flexDirection: { xs: "column", md: "row-reverse" },
    },
    centerLayout: {
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      textAlign: "center",
      height: "100%",
      px: { xs: 2, md: 10 },
    },
    textContainer: {
      width: { xs: "100%", md: "50%" },
      pr: { xs: 0, md: 4 },
      mb: { xs: 3, md: 0 },
    },
    imageContainer: {
      width: { xs: "100%", md: "50%" },
      pl: { xs: 0, md: 4 },
      display: "flex",
      justifyContent: "center",
    },
    centerTextContainer: {
      width: "100%",
      maxWidth: "700px",
      mb: 4,
    },
    centerImageContainer: {
      width: "100%",
      maxWidth: "700px",
      display: "flex",
      justifyContent: "center",
    },
  };

  return (
    <Layout>
      <Box
        sx={{
          bgcolor: "#E6F4EA",
          minHeight: "100vh",
          width: "100%",
          m: 0,
          p: 0,
        }}
      >
        {/* Carousel Section */}
        <Box sx={styles.carouselSection}>
          <Slider {...settings}>
            {slides.map((slide, index) => (
              <Box key={index} sx={styles.carouselSlide}>
                <Box sx={styles.slideContent}>
                  {slide.layout === "left" && (
                    <Box sx={styles.leftLayout}>
                      <Box sx={styles.textContainer}>
                        <Typography variant="h3" sx={styles.slideTitle}>
                          {slide.title} {slide.emoji}
                        </Typography>
                        <Typography
                          variant="body1"
                          sx={styles.slideDescription}
                        >
                          {slide.description}
                        </Typography>
                        <Button
                          variant="contained"
                          sx={styles.ctaButton}
                          href={slide.link}
                        >
                          {slide.cta}
                        </Button>
                      </Box>
                      <Box sx={styles.imageContainer}>
                        <Box
                          component="img"
                          src={slide.image}
                          alt={`${slide.target} Image`}
                          sx={styles.slideImage}
                        />
                      </Box>
                    </Box>
                  )}

                  {slide.layout === "right" && (
                    <Box sx={styles.rightLayout}>
                      <Box sx={styles.textContainer}>
                        <Typography variant="h3" sx={styles.slideTitle}>
                          {slide.title} {slide.emoji}
                        </Typography>
                        <Typography
                          variant="body1"
                          sx={styles.slideDescription}
                        >
                          {slide.description}
                        </Typography>
                        <Button
                          variant="contained"
                          sx={styles.ctaButton}
                          href={slide.link}
                        >
                          {slide.cta}
                        </Button>
                      </Box>
                      <Box sx={styles.imageContainer}>
                        <Box
                          component="img"
                          src={slide.image}
                          alt={`${slide.target} Image`}
                          sx={styles.slideImage}
                        />
                      </Box>
                    </Box>
                  )}

                  {slide.layout === "center" && (
                    <Box sx={styles.centerLayout}>
                      <Box sx={styles.centerTextContainer}>
                        <Typography
                          variant="h3"
                          sx={{ ...styles.slideTitle, textAlign: "center" }}
                        >
                          {slide.title} {slide.emoji}
                        </Typography>
                        <Typography
                          variant="body1"
                          sx={{
                            ...styles.slideDescription,
                            textAlign: "center",
                            mx: "auto",
                          }}
                        >
                          {slide.description}
                        </Typography>
                        <Button
                          variant="contained"
                          sx={{
                            ...styles.ctaButton,
                            mx: "auto",
                            display: "block",
                            mb: 4,
                          }}
                          href={slide.link}
                        >
                          {slide.cta}
                        </Button>
                      </Box>
                      <Box sx={styles.centerImageContainer}>
                        <Box
                          component="img"
                          src={slide.image}
                          alt={`${slide.target} Image`}
                          sx={styles.slideImage}
                        />
                      </Box>
                    </Box>
                  )}
                </Box>
              </Box>
            ))}
          </Slider>
        </Box>

        {/* Section: H·ªó tr·ª£ n√¥ng d√¢n - Standardized feature cards */}
        <Box sx={{ bgcolor: "#E6F4EA", ...styles.section }}>
          <Container maxWidth="lg">
            <Typography variant="h3" sx={styles.sectionTitle}>
              H·ªá th·ªëng th√¥ng minh h·ªó tr·ª£ n√¥ng d√¢n üå±
            </Typography>
            <Grid container spacing={4}>
              {featureCards.map((card, index) => (
                <Grid item xs={12} sm={6} md={4} key={index}>
                  <motion.div
                    initial={{ opacity: 0, y: 50 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.8, delay: index * 0.2 }}
                  >
                    <Box sx={styles.card}>
                      <Box
                        component="img"
                        src={card.image}
                        alt={card.title}
                        sx={styles.cardImage}
                      />
                      <Typography variant="h5" sx={styles.cardTitle}>
                        {card.title}
                      </Typography>
                      <Typography
                        variant="body2"
                        color="text.secondary"
                        sx={{
                          fontFamily: "'Roboto', sans-serif",
                          lineHeight: 1.6,
                          height: "120px", // Fixed height for all descriptions
                          overflow: "hidden", // Prevent overflow
                        }}
                      >
                        {card.description}
                      </Typography>
                    </Box>
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          </Container>
        </Box>

        {/* Section: Quy tr√¨nh - Fixed layout */}
        <Box sx={{ bgcolor: "#F8FAFC", ...styles.section }}>
          <Container maxWidth="lg">
            <Typography variant="h3" sx={styles.sectionTitle}>
              H√†nh tr√¨nh t·ª´ v∆∞·ªùn ƒë·∫øn tay b·∫°n üçã
            </Typography>
            <Grid container spacing={4} alignItems="center">
              <Grid item xs={12} md={6}>
                <motion.div
                  initial={{ opacity: 0, x: -50 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.8 }}
                >
                  <Box
                    sx={{
                      bgcolor: "white",
                      borderRadius: 4,
                      p: 4,
                      boxShadow: "0 4px 15px rgba(0, 0, 0, 0.1)",
                      height: "400px", // Fixed height
                      overflow: "auto", // Allow scrolling if needed
                    }}
                  >
                    <Typography variant="h5" sx={styles.cardTitle}>
                      1. Tr·ªìng tr·ªçt v·ªõi c√¥ng ngh·ªá
                    </Typography>
                    <Typography
                      variant="body1"
                      color="text.secondary"
                      sx={{
                        mb: 3,
                        fontFamily: "'Roboto', sans-serif",
                        lineHeight: 1.6,
                      }}
                    >
                      N√¥ng d√¢n nh·∫≠n ƒë∆∞·ª£c g·ª£i √Ω th√¥ng minh t·ª´ h·ªá th·ªëng: t·ª´ c√°ch
                      chƒÉm s√≥c c√¢y, ph√°t hi·ªán s√¢u b·ªánh s·ªõm, ƒë·∫øn th·ªùi ƒëi·ªÉm thu
                      ho·∫°ch l√Ω t∆∞·ªüng, ƒë·∫£m b·∫£o n√¥ng s·∫£n ƒë·∫°t ch·∫•t l∆∞·ª£ng cao nh·∫•t.
                    </Typography>
                    <Typography variant="h5" sx={styles.cardTitle}>
                      2. Ki·ªÉm tra v√† b·∫£o qu·∫£n
                    </Typography>
                    <Typography
                      variant="body1"
                      color="text.secondary"
                      sx={{
                        mb: 3,
                        fontFamily: "'Roboto', sans-serif",
                        lineHeight: 1.6,
                      }}
                    >
                      H·ªá th·ªëng t·ª± ƒë·ªông ki·ªÉm tra ch·∫•t l∆∞·ª£ng n√¥ng s·∫£n. N·∫øu ch∆∞a
                      ƒë·∫°t, n√¥ng d√¢n s·∫Ω nh·∫≠n h∆∞·ªõng d·∫´n b·∫£o qu·∫£n ƒë·ªÉ gi·ªØ s·∫£n ph·∫©m
                      t∆∞∆°i ngon, s·∫µn s√†ng cho l·∫ßn ki·ªÉm tra sau.
                    </Typography>
                    <Typography variant="h5" sx={styles.cardTitle}>
                      3. ƒê∆∞a ƒë·∫øn ng∆∞·ªùi ti√™u d√πng
                    </Typography>
                    <Typography
                      variant="body1"
                      color="text.secondary"
                      sx={{
                        fontFamily: "'Roboto', sans-serif",
                        lineHeight: 1.6,
                      }}
                    >
                      Ch·ªâ nh·ªØng s·∫£n ph·∫©m ƒë·∫°t chu·∫©n m·ªõi ƒë∆∞·ª£c ƒëƒÉng b√°n, ƒë·∫£m b·∫£o
                      ng∆∞·ªùi ti√™u d√πng nh·∫≠n ƒë∆∞·ª£c n√¥ng s·∫£n t∆∞∆°i ngon, s·∫°ch 100%
                      v·ªõi ngu·ªìn g·ªëc r√µ r√†ng.
                    </Typography>
                  </Box>
                </motion.div>
              </Grid>
              <Grid item xs={12} md={6}>
                <motion.div
                  initial={{ opacity: 0, x: 50 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.8 }}
                >
                  <Box
                    component="img"
                    src="https://images.unsplash.com/photo-1516594798947-e65505dbb29d"
                    alt="Quy tr√¨nh"
                    sx={{
                      width: "100%",
                      height: "400px", // Fixed height to match text box
                      objectFit: "cover",
                      borderRadius: 4,
                      boxShadow: "0 4px 20px rgba(0, 0, 0, 0.1)",
                      transition: "transform 0.5s ease",
                      "&:hover": { transform: "scale(1.03)" },
                    }}
                  />
                </motion.div>
              </Grid>
            </Grid>
          </Container>
        </Box>

        {/* Section: Testimonials - Standardized layout */}
        <Box sx={{ bgcolor: "#E6F4EA", ...styles.section }}>
          <Container maxWidth="lg">
            <Typography variant="h3" sx={styles.sectionTitle}>
              N√¥ng d√¢n v√† kh√°ch h√†ng n√≥i g√¨? üåü
            </Typography>
            <Grid container spacing={4}>
              {testimonials.map((testimonial, index) => (
                <Grid item xs={12} sm={6} md={4} key={index}>
                  <motion.div
                    initial={{ opacity: 0, y: 50 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.8, delay: index * 0.2 }}
                  >
                    <Box
                      sx={{
                        ...styles.card,
                        height: "200px", // Fixed height for all testimonials
                        display: "flex",
                        flexDirection: "column",
                        justifyContent: "space-between",
                      }}
                    >
                      <Typography
                        variant="body1"
                        sx={{
                          fontFamily: "'Roboto', sans-serif",
                          fontStyle: "italic",
                          lineHeight: 1.6,
                        }}
                      >
                        "{testimonial.quote}"
                      </Typography>
                      <Typography
                        variant="body2"
                        color="text.secondary"
                        sx={{
                          fontFamily: "'Roboto', sans-serif",
                          fontWeight: "bold",
                        }}
                      >
                        - {testimonial.author}, {testimonial.role}
                      </Typography>
                    </Box>
                  </motion.div>
                </Grid>
              ))}
            </Grid>
          </Container>
        </Box>

        {/* Call to Action - Fixed height */}
        <Box
          sx={{
            py: 8,
            background: "linear-gradient(135deg, #42A5F5 0%, #1E88E5 100%)",
            color: "white",
            textAlign: "center",
            height: "300px", // Fixed height
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          }}
        >
          <Container maxWidth="md">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
            >
              <Typography
                variant="h3"
                sx={{
                  fontWeight: "bold",
                  mb: 3,
                  fontFamily: "'Roboto', sans-serif",
                }}
              >
                C√πng x√¢y d·ª±ng n√¥ng nghi·ªáp b·ªÅn v·ªØng! üåç
              </Typography>
              <Typography
                variant="body1"
                sx={{
                  mb: 4,
                  fontFamily: "'Roboto', sans-serif",
                  maxWidth: 600,
                  mx: "auto",
                  lineHeight: 1.6,
                }}
              >
                Tham gia ngay ƒë·ªÉ tr·∫£i nghi·ªám h·ªá th·ªëng th√¥ng minh, gi√∫p n√¥ng d√¢n
                tr·ªìng tr·ªçt hi·ªáu qu·∫£ v√† mang n√¥ng s·∫£n ch·∫•t l∆∞·ª£ng ƒë·∫øn m·ªçi nh√†!
              </Typography>
              <Button
                variant="contained"
                sx={{
                  bgcolor: "white",
                  color: "#42A5F5",
                  borderRadius: "50px",
                  px: 5,
                  py: 1.5,
                  fontWeight: "bold",
                  fontFamily: "'Roboto', sans-serif",
                  fontSize: "1rem",
                  "&:hover": {
                    bgcolor: "#f5f5f5",
                    transform: "translateY(-3px)",
                    boxShadow: "0 4px 12px rgba(255, 255, 255, 0.5)",
                  },
                  transition: "all 0.3s ease",
                }}
              >
                Tham gia ngay
              </Button>
            </motion.div>
          </Container>
        </Box>
      </Box>

      <Footer />
    </Layout>
  );
};

export default HomePage;
